# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server {
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;

#        root /var/www/gooru-web/ ;
#        index index.html index.htm;

        # Make site accessible from http://localhost/
        server_name localhost;

        location / {
                root /var/www/gooru-web/ ;
                try_files $uri $uri/ /index.html?/$request_uri;
        }

        location ^~ /welcome {
                root /var/www/gooru/ ;
                index  index.html;
        }

        location ^~ /about {
                root /var/www/gooru/ ;
                index  mission.html;
        }

        location ^~ /build {
                root /var/www/gooru/ ;
                index  index.html;
        }

	rewrite http://www.silverback-qa.gooru.org/sign-in  http://www.silverback-qa.gooru.org/signs redirect;
        
#	location / {
#                # First attempt to serve request as file, then
#                # as directory, then fall back to displaying a 404.
#                root /var/www/gooru-web/ ;
#                try_files $uri $uri/ /index.html?/$request_uri;
#                try_files $uri $uri/ =404;
#                try_files $uri /index.html;
#                index /welcome/index.html;
#                auth_basic "Restricted Content";
#                auth_basic_user_file /etc/nginx/.htpasswd;
#                # Uncomment to enable naxsi on this location
#                include /etc/nginx/naxsi.rules
#                auth_basic "Authentication Required";
#                auth_basic_user_file /etc/nginx/.htpasswd;
#        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg)$ {
                expires 30d;
                add_header Pragma public;
                add_header Cache-Control "public";

                root /var/www/gooru-web/ ;
                try_files $uri =404;
        }


       # Proxy rules for fonts.googleapis.com
       location /css {
           sub_filter 'https://fonts.gstatic.com/' 'https://$host/fonts/';
           sub_filter_once off;
           sub_filter_types *;
           proxy_set_header Accept-Encoding "";
           proxy_pass https://fonts.googleapis.com/css;
      }

      location /icon {
           sub_filter 'https://fonts.gstatic.com/' 'https://$host/fonts/';
           sub_filter_once off;
           sub_filter_types *;
           proxy_set_header Accept-Encoding "";
           proxy_pass https://fonts.googleapis.com/icon;
      }
	location /nginx_status {
        # Turn on stats
        stub_status on;
        access_log   off;
        # only allow access from 192.168.1.5 #
        allow all;
   }

      location /fonts {
           proxy_pass https://fonts.gstatic.com/;
      }
}
